<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
<<<<<<< HEAD
    <list default="true" id="0e72e034-aaa7-4046-b7f9-bbfb7b65012a" name="更改" comment="Version 1.0.4(Add save data direction hyperlink)">
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/java/util/graphic/SaveUnitPane.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/util/graphic/SaveUnitPane.java" afterDir="false" />
=======
    <list default="true" id="0e72e034-aaa7-4046-b7f9-bbfb7b65012a" name="更改" comment="Version 1.0.5(Implement savedata info hover preview)">
      <change afterPath="$PROJECT_DIR$/src/main/java/ai/AISolver.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/misc.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/misc.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/java/ai/AIThread.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/ai/AIThread.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/java/ai/AlphaDuo.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/ai/AlphaDuo.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/java/model/Grid.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/model/Grid.java" afterDir="false" />
>>>>>>> CJKProject_202405
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="FxmlFile" />
        <option value="Interface" />
        <option value="Class" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
<<<<<<< HEAD
    <option name="RECENT_BRANCH_BY_REPOSITORY">
      <map>
        <entry key="$PROJECT_DIR$" value="zaddle" />
      </map>
    </option>
=======
>>>>>>> CJKProject_202405
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 3
}</component>
  <component name="ProjectId" id="2gtu7oicMVlC4ncjClqNBKWrEOa" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true">
    <ConfirmationsSetting value="2" id="Add" />
  </component>
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="openDirectoriesWithSingleClick" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "RunOnceActivity.OpenProjectViewOnStart": "true",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "SHARE_PROJECT_CONFIGURATION_FILES": "true",
<<<<<<< HEAD
    "git-widget-placeholder": "dev",
    "kotlin-language-version-configured": "true",
    "list.type.of.created.stylesheet": "CSS",
=======
    "git-widget-placeholder": "CJKProject__202405",
    "kotlin-language-version-configured": "true",
>>>>>>> CJKProject_202405
    "node.js.detected.package.eslint": "true",
    "node.js.selected.package.eslint": "(autodetect)",
    "node.js.selected.package.tslint": "(autodetect)",
    "nodejs_package_manager_path": "npm",
    "settings.editor.selected.configurable": "preferences.pluginManager",
    "vue.rearranger.settings.migration": "true",
<<<<<<< HEAD
    "应用程序.CustomSlider.executor": "Run",
    "应用程序.GameApplication.executor": "Run",
    "应用程序.JFXSliderExample.executor": "Run",
    "应用程序.Main.executor": "Run",
    "应用程序.TestInfo.executor": "Run",
    "应用程序.TestMainUIApplication.executor": "Run"
  }
}]]></component>
  <component name="RunManager" selected="应用程序.Main">
    <configuration name="CustomSlider" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
      <option name="MAIN_CLASS_NAME" value="CustomSlider" />
      <module name="Reach2048" />
      <option name="VM_PARAMETERS" value="--module-path &quot;C:\Program Files\Java\lib\javafx-sdk-21.0.2\lib&quot; --add-modules javafx.controls,javafx.fxml --add-modules javafx.controls,javafx.media --add-exports javafx.graphics/com.sun.glass.utils=ALL-UNNAMED --add-exports javafx.graphics/com.sun.javafx.tk.quantum=ALL-UNNAMED" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="GameApplication" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
      <option name="MAIN_CLASS_NAME" value="GameApplication" />
      <module name="Reach2048" />
      <option name="VM_PARAMETERS" value="--module-path &quot;C:\Program Files\Java\lib\javafx-sdk-21.0.2\lib&quot; --add-modules javafx.controls,javafx.fxml --add-modules javafx.controls,javafx.media --add-exports javafx.graphics/com.sun.glass.utils=ALL-UNNAMED --add-exports javafx.graphics/com.sun.javafx.tk.quantum=ALL-UNNAMED" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="JFXSliderExample" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
      <option name="MAIN_CLASS_NAME" value="JFXSliderExample" />
      <module name="Reach2048" />
      <option name="VM_PARAMETERS" value="--module-path &quot;C:\Program Files\Java\lib\javafx-sdk-21.0.2\lib&quot; --add-modules javafx.controls,javafx.fxml --add-modules javafx.controls,javafx.media --add-exports javafx.graphics/com.sun.glass.utils=ALL-UNNAMED --add-exports javafx.graphics/com.sun.javafx.tk.quantum=ALL-UNNAMED" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="Main" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
=======
    "应用程序.GameApplication.executor": "Run",
    "应用程序.Main.executor": "Run",
    "应用程序.TestMainUIApplication.executor": "Run",
    "应用程序.未命名.executor": "Run"
  }
}]]></component>
  <component name="RunManager" selected="应用程序.未命名">
    <configuration name="未命名" type="Application" factoryName="Application" nameIsGenerated="true">
>>>>>>> CJKProject_202405
      <option name="MAIN_CLASS_NAME" value="Main" />
      <module name="Reach2048" />
      <option name="VM_PARAMETERS" value="--module-path &quot;C:\Program Files\Java\lib\javafx-sdk-21.0.2\lib&quot; --add-modules javafx.controls,javafx.fxml --add-modules javafx.controls,javafx.media --add-exports javafx.graphics/com.sun.glass.utils=ALL-UNNAMED --add-exports javafx.graphics/com.sun.javafx.tk.quantum=ALL-UNNAMED" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="TestMainUIApplication" type="Application" factoryName="Application">
      <option name="ALTERNATIVE_JRE_PATH" value="21" />
      <option name="MAIN_CLASS_NAME" value="Main" />
      <module name="Reach2048" />
      <option name="PROGRAM_PARAMETERS" value="--module-path &quot;C:\Program Files\Java\lib\javafx-sdk-21.0.2\lib&quot; --add-modules javafx.controls,javafx.fxml --add-modules javafx.controls,javafx.media --add-exports javafx.graphics/com.sun.glass.utils=ALL-UNNAMED --add-exports javafx.graphics/com.sun.javafx.tk.quantum=ALL-UNNAMED" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <list>
      <item itemvalue="应用程序.TestMainUIApplication" />
      <item itemvalue="应用程序.未命名" />
    </list>
    <recent_temporary>
      <list>
<<<<<<< HEAD
        <item itemvalue="应用程序.Main" />
        <item itemvalue="应用程序.GameApplication" />
        <item itemvalue="应用程序.CustomSlider" />
        <item itemvalue="应用程序.JFXSliderExample" />
        <item itemvalue="应用程序.TestInfo" />
=======
        <item itemvalue="应用程序.TestMainUIApplication" />
>>>>>>> CJKProject_202405
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="项目级" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task id="LOCAL-00001" summary="Implement multiple player management and save function">
      <option name="closed" value="true" />
      <created>1716480870818</created>
      <option name="number" value="00001" />
      <option name="presentableId" value="LOCAL-00001" />
      <option name="project" value="LOCAL" />
      <updated>1716480870818</updated>
    </task>
    <task active="true" id="Default" summary="默认任务">
      <changelist id="0e72e034-aaa7-4046-b7f9-bbfb7b65012a" name="更改" comment="Implement multiple player management and save function" />
      <created>1716529031291</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1716529031291</updated>
      <workItem from="1716529033750" duration="10429000" />
      <workItem from="1716611936691" duration="178000" />
      <workItem from="1716612124380" duration="25412000" />
      <workItem from="1716702297487" duration="11293000" />
      <workItem from="1716713611578" duration="244000" />
      <workItem from="1716717775841" duration="4053000" />
<<<<<<< HEAD
      <workItem from="1716804344466" duration="17496000" />
      <workItem from="1716821940316" duration="11904000" />
      <workItem from="1716866871303" duration="3876000" />
      <workItem from="1716884075284" duration="19854000" />
      <workItem from="1716943203575" duration="3849000" />
      <workItem from="1716986212801" duration="3548000" />
=======
>>>>>>> CJKProject_202405
    </task>
    <task id="LOCAL-00002" summary="Modify GameUI">
      <option name="closed" value="true" />
      <created>1716632335330</created>
      <option name="number" value="00002" />
      <option name="presentableId" value="LOCAL-00002" />
      <option name="project" value="LOCAL" />
      <updated>1716632335331</updated>
    </task>
    <task id="LOCAL-00003" summary="Modify GameUI with sidebar">
      <option name="closed" value="true" />
      <created>1716650344770</created>
      <option name="number" value="00003" />
      <option name="presentableId" value="LOCAL-00003" />
      <option name="project" value="LOCAL" />
      <updated>1716650344770</updated>
    </task>
    <task id="LOCAL-00004" summary="Modify Game Runtime logic">
      <option name="closed" value="true" />
      <created>1716711603420</created>
      <option name="number" value="00004" />
      <option name="presentableId" value="LOCAL-00004" />
      <option name="project" value="LOCAL" />
      <updated>1716711603420</updated>
    </task>
    <task id="LOCAL-00005" summary="Apply auto save func">
      <option name="closed" value="true" />
      <created>1716713655208</created>
      <option name="number" value="00005" />
      <option name="presentableId" value="LOCAL-00005" />
      <option name="project" value="LOCAL" />
      <updated>1716713655208</updated>
    </task>
    <task id="LOCAL-00006" summary="Version:1.0.0">
      <option name="closed" value="true" />
      <created>1716717860221</created>
      <option name="number" value="00006" />
      <option name="presentableId" value="LOCAL-00006" />
      <option name="project" value="LOCAL" />
      <updated>1716717860221</updated>
    </task>
    <task id="LOCAL-00007" summary="Version:1.0.0">
      <option name="closed" value="true" />
      <created>1716721663720</created>
      <option name="number" value="00007" />
      <option name="presentableId" value="LOCAL-00007" />
      <option name="project" value="LOCAL" />
      <updated>1716721663720</updated>
    </task>
    <task id="LOCAL-00008" summary="Version:1.0.0">
      <option name="closed" value="true" />
      <created>1716983228635</created>
      <option name="number" value="00008" />
      <option name="presentableId" value="LOCAL-00008" />
      <option name="project" value="LOCAL" />
      <updated>1716983228635</updated>
    </task>
    <task id="LOCAL-00009" summary="package model;&#10;&#10;import util.Saver;&#10;import java.io.IOException;&#10;import java.util.*;&#10;&#10;public class UserManager {&#10;    private List&lt;User&gt; userList;&#10;    private static final String savePath = &quot;src/main/resources/general&quot;;&#10;&#10;    public UserManager() {&#10;        try {&#10;            Saver.makeDir(savePath); // 创建存储用户信息的文件夹&#10;        } catch (Exception e) {&#10;            e.printStackTrace();&#10;        }&#10;        userList = new ArrayList&lt;&gt;();&#10;    }&#10;&#10;    public User register(String name, String password) throws IOException {&#10;        User user = null;&#10;        if (hasUser(name)) { // 检查用户是否已存在&#10;            throw new IllegalArgumentException(&quot;This user has existed!&quot;);&#10;        } else if (!isPasswordValid(password)) { // 检查密码是否有效&#10;            throw new IllegalArgumentException(&quot;Invalid password! Your password should contain at least 8 characters.&quot;);&#10;        } else if (name.equals(&quot;&quot;) || password.equals(&quot;&quot;)) { // 检查用户名和密码是否为空&#10;            throw new IllegalArgumentException(&quot;Username or password cannot be empty!&quot;);&#10;        } else {&#10;            user = new User(name, password, &quot;src/main/resources/savedata/&quot; + name);&#10;            Saver.makeDir(user.getPath());&#10;            userList.add(user);&#10;            // 保存用户信息&#10;            Saver.saveToJson(Saver.buildGson(this), savePath + &quot;/userInfo.json&quot;);&#10;        }&#10;        return user;&#10;    }&#10;    public User login(String name, String password) {&#10;        if (userList.isEmpty()) {&#10;            throw new IllegalArgumentException(&quot;This user doesn't exist!&quot;);&#10;        } else {&#10;            for (int i = 0; i &lt; userList.size(); i++) {&#10;                if (userList.get(i).getName().equals(name)) {&#10;                    if (!userList.get(i).getPassword().equals(password)) {&#10;                        throw new IllegalArgumentException(&quot;Incorrect password!&quot;);&#10;                    } else {&#10;                        return userList.get(i);&#10;                    }&#10;                }&#10;            }&#10;            throw new IllegalArgumentException(&quot;This user doesn't exist!&quot;);&#10;        }&#10;    }&#10;    public void deleteUser(User user) throws IOException {&#10;        userList.remove(user);&#10;        Saver.saveToJson(Saver.buildGson(this), savePath);&#10;    }&#10;    public boolean hasUser(String name) {&#10;        boolean hasUser = false;&#10;        for (int i = 0; i &lt; userList.size(); i++) {&#10;            if (userList.get(i).getName().equals(name)) {&#10;                hasUser = true;&#10;                break;&#10;            }&#10;        }&#10;        return hasUser;&#10;    }&#10;    public boolean isPasswordValid(String password) {&#10;        boolean isPasswordValid = false;&#10;        if (password.length() &gt;= 8) {&#10;            isPasswordValid = true;&#10;        }&#10;        return isPasswordValid;&#10;    }&#10;}">
      <option name="closed" value="true" />
      <created>1716983259273</created>
      <option name="number" value="00009" />
      <option name="presentableId" value="LOCAL-00009" />
      <option name="project" value="LOCAL" />
      <updated>1716983259273</updated>
    </task>
    <task id="LOCAL-00010" summary="&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#10;&lt;project version=&quot;4&quot;&gt;&#10;  &lt;component name=&quot;AutoImportSettings&quot;&gt;&#10;    &lt;option name=&quot;autoReloadType&quot; value=&quot;SELECTIVE&quot; /&gt;&#10;  &lt;/component&gt;&#10;  &lt;component name=&quot;ChangeListManager&quot;&gt;&#10;    &lt;list default=&quot;true&quot; id=&quot;0e72e034-aaa7-4046-b7f9-bbfb7b65012a&quot; name=&quot;更改&quot; comment=&quot;package model;&amp;#10;&amp;#10;import util.Saver;&amp;#10;import java.io.IOException;&amp;#10;import java.util.*;&amp;#10;&amp;#10;public class UserManager {&amp;#10;    private List&amp;lt;User&amp;gt; userList;&amp;#10;    private static final String savePath = &amp;quot;src/main/resources/general&amp;quot;;&amp;#10;&amp;#10;    public UserManager() {&amp;#10;        try {&amp;#10;            Saver.makeDir(savePath); // 创建存储用户信息的文件夹&amp;#10;        } catch (Exception e) {&amp;#10;            e.printStackTrace();&amp;#10;        }&amp;#10;        userList = new ArrayList&amp;lt;&amp;gt;();&amp;#10;    }&amp;#10;&amp;#10;    public User register(String name, String password) throws IOException {&amp;#10;        User user = null;&amp;#10;        if (hasUser(name)) { // 检查用户是否已存在&amp;#10;            throw new IllegalArgumentException(&amp;quot;This user has existed!&amp;quot;);&amp;#10;        } else if (!isPasswordValid(password)) { // 检查密码是否有效&amp;#10;            throw new IllegalArgumentException(&amp;quot;Invalid password! Your password should contain at least 8 characters.&amp;quot;);&amp;#10;        } else if (name.equals(&amp;quot;&amp;quot;) || password.equals(&amp;quot;&amp;quot;)) { // 检查用户名和密码是否为空&amp;#10;            throw new IllegalArgumentException(&amp;quot;Username or password cannot be empty!&amp;quot;);&amp;#10;        } else {&amp;#10;            user = new User(name, password, &amp;quot;src/main/resources/savedata/&amp;quot; + name);&amp;#10;            Saver.makeDir(user.getPath());&amp;#10;            userList.add(user);&amp;#10;            // 保存用户信息&amp;#10;            Saver.saveToJson(Saver.buildGson(this), savePath + &amp;quot;/userInfo.json&amp;quot;);&amp;#10;        }&amp;#10;        return user;&amp;#10;    }&amp;#10;    public User login(String name, String password) {&amp;#10;        if (userList.isEmpty()) {&amp;#10;            throw new IllegalArgumentException(&amp;quot;This user doesn't exist!&amp;quot;);&amp;#10;        } else {&amp;#10;            for (int i = 0; i &amp;lt; userList.size(); i++) {&amp;#10;                if (userList.get(i).getName().equals(name)) {&amp;#10;                    if (!userList.get(i).getPassword().equals(password)) {&amp;#10;                        throw new IllegalArgumentException(&amp;quot;Incorrect password!&amp;quot;);&amp;#10;                    } else {&amp;#10;                        return userList.get(i);&amp;#10;                    }&amp;#10;                }&amp;#10;            }&amp;#10;            throw new IllegalArgumentException(&amp;quot;This user doesn't exist!&amp;quot;);&amp;#10;        }&amp;#10;    }&amp;#10;    public void deleteUser(User user) throws IOException {&amp;#10;        userList.remove(user);&amp;#10;        Saver.saveToJson(Saver.buildGson(this), savePath);&amp;#10;    }&amp;#10;    public boolean hasUser(String name) {&amp;#10;        boolean hasUser = false;&amp;#10;        for (int i = 0; i &amp;lt; userList.size(); i++) {&amp;#10;            if (userList.get(i).getName().equals(name)) {&amp;#10;                hasUser = true;&amp;#10;                break;&amp;#10;            }&amp;#10;        }&amp;#10;        return hasUser;&amp;#10;    }&amp;#10;    public boolean isPasswordValid(String password) {&amp;#10;        boolean isPasswordValid = false;&amp;#10;        if (password.length() &amp;gt;= 8) {&amp;#10;            isPasswordValid = true;&amp;#10;        }&amp;#10;        return isPasswordValid;&amp;#10;    }&amp;#10;}&quot;&gt;&#10;      &lt;change beforePath=&quot;D:/IdeaProjects/Gaming2048/.idea/workspace.xml&quot; beforeDir=&quot;false&quot; afterPath=&quot;D:/IdeaProjects/Gaming2048/.idea/workspace.xml&quot; afterDir=&quot;false&quot; /&gt;&#10;      &lt;change beforePath=&quot;D:/IdeaProjects/Gaming2048/src/main/java/ai/AlphaDuo.java&quot; beforeDir=&quot;false&quot; afterPath=&quot;D:/IdeaProjects/Gaming2048/src/main/java/ai/AlphaDuo.java&quot; afterDir=&quot;false&quot; /&gt;&#10;    &lt;/list&gt;&#10;    &lt;option name=&quot;SHOW_DIALOG&quot; value=&quot;false&quot; /&gt;&#10;    &lt;option name=&quot;HIGHLIGHT_CONFLICTS&quot; value=&quot;true&quot; /&gt;&#10;    &lt;option name=&quot;HIGHLIGHT_NON_ACTIVE_CHANGELIST&quot; value=&quot;false&quot; /&gt;&#10;    &lt;option name=&quot;LAST_RESOLUTION&quot; value=&quot;IGNORE&quot; /&gt;&#10;  &lt;/component&gt;&#10;  &lt;component name=&quot;FileTemplateManagerImpl&quot;&gt;&#10;    &lt;option name=&quot;RECENT_TEMPLATES&quot;&gt;&#10;      &lt;list&gt;&#10;        &lt;option value=&quot;FxmlFile&quot; /&gt;&#10;        &lt;option value=&quot;Interface&quot; /&gt;&#10;        &lt;option value=&quot;Class&quot; /&gt;&#10;      &lt;/list&gt;&#10;    &lt;/option&gt;&#10;  &lt;/component&gt;&#10;  &lt;component name=&quot;Git.Settings&quot;&gt;&#10;    &lt;option name=&quot;RECENT_GIT_ROOT_PATH&quot; value=&quot;D:/IdeaProjects/Gaming2048&quot; /&gt;&#10;  &lt;/component&gt;&#10;  &lt;component name=&quot;MarkdownSettingsMigration&quot;&gt;&#10;    &lt;option name=&quot;stateVersion&quot; value=&quot;1&quot; /&gt;&#10;  &lt;/component&gt;&#10;  &lt;component name=&quot;ProjectColorInfo&quot;&gt;{&#10;  &amp;quot;associatedIndex&amp;quot;: 3&#10;}&lt;/component&gt;&#10;  &lt;component name=&quot;ProjectId&quot; id=&quot;2gtu7oicMVlC4ncjClqNBKWrEOa&quot; /&gt;&#10;  &lt;component name=&quot;ProjectLevelVcsManager&quot; settingsEditedManually=&quot;true&quot;&gt;&#10;    &lt;ConfirmationsSetting value=&quot;2&quot; id=&quot;Add&quot; /&gt;&#10;  &lt;/component&gt;&#10;  &lt;component name=&quot;ProjectViewState&quot;&gt;&#10;    &lt;option name=&quot;hideEmptyMiddlePackages&quot; value=&quot;true&quot; /&gt;&#10;    &lt;option name=&quot;openDirectoriesWithSingleClick&quot; value=&quot;true&quot; /&gt;&#10;    &lt;option name=&quot;showLibraryContents&quot; value=&quot;true&quot; /&gt;&#10;  &lt;/component&gt;&#10;  &lt;component name=&quot;PropertiesComponent&quot;&gt;{&#10;  &amp;quot;keyToString&amp;quot;: {&#10;    &amp;quot;RunOnceActivity.OpenProjectViewOnStart&amp;quot;: &amp;quot;true&amp;quot;,&#10;    &amp;quot;RunOnceActivity.ShowReadmeOnStart&amp;quot;: &amp;quot;true&amp;quot;,&#10;    &amp;quot;SHARE_PROJECT_CONFIGURATION_FILES&amp;quot;: &amp;quot;true&amp;quot;,&#10;    &amp;quot;git-widget-placeholder&amp;quot;: &amp;quot;CJKProject__202405&amp;quot;,&#10;    &amp;quot;kotlin-language-version-configured&amp;quot;: &amp;quot;true&amp;quot;,&#10;    &amp;quot;node.js.detected.package.eslint&amp;quot;: &amp;quot;true&amp;quot;,&#10;    &amp;quot;node.js.selected.package.eslint&amp;quot;: &amp;quot;(autodetect)&amp;quot;,&#10;    &amp;quot;node.js.selected.package.tslint&amp;quot;: &amp;quot;(autodetect)&amp;quot;,&#10;    &amp;quot;nodejs_package_manager_path&amp;quot;: &amp;quot;npm&amp;quot;,&#10;    &amp;quot;settings.editor.selected.configurable&amp;quot;: &amp;quot;preferences.pluginManager&amp;quot;,&#10;    &amp;quot;vue.rearranger.settings.migration&amp;quot;: &amp;quot;true&amp;quot;,&#10;    &amp;quot;应用程序.GameApplication.executor&amp;quot;: &amp;quot;Run&amp;quot;,&#10;    &amp;quot;应用程序.Main.executor&amp;quot;: &amp;quot;Run&amp;quot;,&#10;    &amp;quot;应用程序.TestMainUIApplication.executor&amp;quot;: &amp;quot;Run&amp;quot;&#10;  }&#10;}&lt;/component&gt;&#10;  &lt;component name=&quot;RunManager&quot; selected=&quot;应用程序.TestMainUIApplication&quot;&gt;&#10;    &lt;configuration name=&quot;GameApplication&quot; type=&quot;Application&quot; factoryName=&quot;Application&quot; temporary=&quot;true&quot; nameIsGenerated=&quot;true&quot;&gt;&#10;      &lt;option name=&quot;MAIN_CLASS_NAME&quot; value=&quot;GameApplication&quot; /&gt;&#10;      &lt;module name=&quot;Reach2048&quot; /&gt;&#10;      &lt;option name=&quot;VM_PARAMETERS&quot; value=&quot;--module-path &amp;quot;C:\Program Files\Java\lib\javafx-sdk-21.0.2\lib&amp;quot; --add-modules javafx.controls,javafx.fxml --add-modules javafx.controls,javafx.media --add-exports javafx.graphics/com.sun.glass.utils=ALL-UNNAMED --add-exports javafx.graphics/com.sun.javafx.tk.quantum=ALL-UNNAMED&quot; /&gt;&#10;      &lt;method v=&quot;2&quot;&gt;&#10;        &lt;option name=&quot;Make&quot; enabled=&quot;true&quot; /&gt;&#10;      &lt;/method&gt;&#10;    &lt;/configuration&gt;&#10;    &lt;configuration name=&quot;Main&quot; type=&quot;Application&quot; factoryName=&quot;Application&quot; temporary=&quot;true&quot; nameIsGenerated=&quot;true&quot;&gt;&#10;      &lt;option name=&quot;MAIN_CLASS_NAME&quot; value=&quot;Main&quot; /&gt;&#10;      &lt;module name=&quot;Reach2048&quot; /&gt;&#10;      &lt;option name=&quot;VM_PARAMETERS&quot; value=&quot;--module-path &amp;quot;C:\Program Files\Java\lib\javafx-sdk-21.0.2\lib&amp;quot; --add-modules javafx.controls,javafx.fxml --add-modules javafx.controls,javafx.media --add-exports javafx.graphics/com.sun.glass.utils=ALL-UNNAMED --add-exports javafx.graphics/com.sun.javafx.tk.quantum=ALL-UNNAMED&quot; /&gt;&#10;      &lt;method v=&quot;2&quot;&gt;&#10;        &lt;option name=&quot;Make&quot; enabled=&quot;true&quot; /&gt;&#10;      &lt;/method&gt;&#10;    &lt;/configuration&gt;&#10;    &lt;configuration name=&quot;TestMainUIApplication&quot; type=&quot;Application&quot; factoryName=&quot;Application&quot; temporary=&quot;true&quot; nameIsGenerated=&quot;true&quot;&gt;&#10;      &lt;option name=&quot;MAIN_CLASS_NAME&quot; value=&quot;TestMainUIApplication&quot; /&gt;&#10;      &lt;module name=&quot;Reach2048&quot; /&gt;&#10;      &lt;option name=&quot;VM_PARAMETERS&quot; value=&quot;--module-path &amp;quot;C:\Program Files\Java\javafx-sdk-21.0.2\lib&amp;quot; --add-modules javafx.controls,javafx.fxml --add-modules javafx.controls,javafx.media --add-exports javafx.graphics/com.sun.glass.utils=ALL-UNNAMED --add-exports javafx.graphics/com.sun.javafx.tk.quantum=ALL-UNNAMED&quot; /&gt;&#10;      &lt;method v=&quot;2&quot;&gt;&#10;        &lt;option name=&quot;Make&quot; enabled=&quot;true&quot; /&gt;&#10;      &lt;/method&gt;&#10;    &lt;/configuration&gt;&#10;    &lt;list&gt;&#10;      &lt;item itemvalue=&quot;应用程序.Main&quot; /&gt;&#10;      &lt;item itemvalue=&quot;应用程序.GameApplication&quot; /&gt;&#10;      &lt;item itemvalue=&quot;应用程序.TestMainUIApplication&quot; /&gt;&#10;    &lt;/list&gt;&#10;    &lt;recent_temporary&gt;&#10;      &lt;list&gt;&#10;        &lt;item itemvalue=&quot;应用程序.TestMainUIApplication&quot; /&gt;&#10;        &lt;item itemvalue=&quot;应用程序.Main&quot; /&gt;&#10;        &lt;item itemvalue=&quot;应用程序.GameApplication&quot; /&gt;&#10;      &lt;/list&gt;&#10;    &lt;/recent_temporary&gt;&#10;  &lt;/component&gt;&#10;  &lt;component name=&quot;SpellCheckerSettings&quot; RuntimeDictionaries=&quot;0&quot; Folders=&quot;0&quot; CustomDictionaries=&quot;0&quot; DefaultDictionary=&quot;项目级&quot; UseSingleDictionary=&quot;true&quot; transferred=&quot;true&quot; /&gt;&#10;  &lt;component name=&quot;TaskManager&quot;&gt;&#10;    &lt;task id=&quot;LOCAL-00001&quot; summary=&quot;Implement multiple player management and save function&quot;&gt;&#10;      &lt;option name=&quot;closed&quot; value=&quot;true&quot; /&gt;&#10;      &lt;created&gt;1716480870818&lt;/created&gt;&#10;      &lt;option name=&quot;number&quot; value=&quot;00001&quot; /&gt;&#10;      &lt;option name=&quot;presentableId&quot; value=&quot;LOCAL-00001&quot; /&gt;&#10;      &lt;option name=&quot;project&quot; value=&quot;LOCAL&quot; /&gt;&#10;      &lt;updated&gt;1716480870818&lt;/updated&gt;&#10;    &lt;/task&gt;&#10;    &lt;task active=&quot;true&quot; id=&quot;Default&quot; summary=&quot;默认任务&quot;&gt;&#10;      &lt;changelist id=&quot;0e72e034-aaa7-4046-b7f9-bbfb7b65012a&quot; name=&quot;更改&quot; comment=&quot;Implement multiple player management and save function&quot; /&gt;&#10;      &lt;created&gt;1716529031291&lt;/created&gt;&#10;      &lt;option name=&quot;number&quot; value=&quot;Default&quot; /&gt;&#10;      &lt;option name=&quot;presentableId&quot; value=&quot;Default&quot; /&gt;&#10;      &lt;updated&gt;1716529031291&lt;/updated&gt;&#10;      &lt;workItem from=&quot;1716529033750&quot; duration=&quot;10429000&quot; /&gt;&#10;      &lt;workItem from=&quot;1716611936691&quot; duration=&quot;178000&quot; /&gt;&#10;      &lt;workItem from=&quot;1716612124380&quot; duration=&quot;25412000&quot; /&gt;&#10;      &lt;workItem from=&quot;1716702297487&quot; duration=&quot;11293000&quot; /&gt;&#10;      &lt;workItem from=&quot;1716713611578&quot; duration=&quot;244000&quot; /&gt;&#10;      &lt;workItem from=&quot;1716717775841&quot; duration=&quot;4053000&quot; /&gt;&#10;    &lt;/task&gt;&#10;    &lt;task id=&quot;LOCAL-00002&quot; summary=&quot;Modify GameUI&quot;&gt;&#10;      &lt;option name=&quot;closed&quot; value=&quot;true&quot; /&gt;&#10;      &lt;created&gt;1716632335330&lt;/created&gt;&#10;      &lt;option name=&quot;number&quot; value=&quot;00002&quot; /&gt;&#10;      &lt;option name=&quot;presentableId&quot; value=&quot;LOCAL-00002&quot; /&gt;&#10;      &lt;option name=&quot;project&quot; value=&quot;LOCAL&quot; /&gt;&#10;      &lt;updated&gt;1716632335331&lt;/updated&gt;&#10;    &lt;/task&gt;&#10;    &lt;task id=&quot;LOCAL-00003&quot; summary=&quot;Modify GameUI with sidebar&quot;&gt;&#10;      &lt;option name=&quot;closed&quot; value=&quot;true&quot; /&gt;&#10;      &lt;created&gt;1716650344770&lt;/created&gt;&#10;      &lt;option name=&quot;number&quot; value=&quot;00003&quot; /&gt;&#10;      &lt;option name=&quot;presentableId&quot; value=&quot;LOCAL-00003&quot; /&gt;&#10;      &lt;option name=&quot;project&quot; value=&quot;LOCAL&quot; /&gt;&#10;      &lt;updated&gt;1716650344770&lt;/updated&gt;&#10;    &lt;/task&gt;&#10;    &lt;task id=&quot;LOCAL-00004&quot; summary=&quot;Modify Game Runtime logic&quot;&gt;&#10;      &lt;option name=&quot;closed&quot; value=&quot;true&quot; /&gt;&#10;      &lt;created&gt;1716711603420&lt;/created&gt;&#10;      &lt;option name=&quot;number&quot; value=&quot;00004&quot; /&gt;&#10;      &lt;option name=&quot;presentableId&quot; value=&quot;LOCAL-00004&quot; /&gt;&#10;      &lt;option name=&quot;project&quot; value=&quot;LOCAL&quot; /&gt;&#10;      &lt;updated&gt;1716711603420&lt;/updated&gt;&#10;    &lt;/task&gt;&#10;    &lt;task id=&quot;LOCAL-00005&quot; summary=&quot;Apply auto save func&quot;&gt;&#10;      &lt;option name=&quot;closed&quot; value=&quot;true&quot; /&gt;&#10;      &lt;created&gt;1716713655208&lt;/created&gt;&#10;      &lt;option name=&quot;number&quot; value=&quot;00005&quot; /&gt;&#10;      &lt;option name=&quot;presentableId&quot; value=&quot;LOCAL-00005&quot; /&gt;&#10;      &lt;option name=&quot;project&quot; value=&quot;LOCAL&quot; /&gt;&#10;      &lt;updated&gt;1716713655208&lt;/updated&gt;&#10;    &lt;/task&gt;&#10;    &lt;task id=&quot;LOCAL-00006&quot; summary=&quot;Version:1.0.0&quot;&gt;&#10;      &lt;option name=&quot;closed&quot; value=&quot;true&quot; /&gt;&#10;      &lt;created&gt;1716717860221&lt;/created&gt;&#10;      &lt;option name=&quot;number&quot; value=&quot;00006&quot; /&gt;&#10;      &lt;option name=&quot;presentableId&quot; value=&quot;LOCAL-00006&quot; /&gt;&#10;      &lt;option name=&quot;project&quot; value=&quot;LOCAL&quot; /&gt;&#10;      &lt;updated&gt;1716717860221&lt;/updated&gt;&#10;    &lt;/task&gt;&#10;    &lt;task id=&quot;LOCAL-00007&quot; summary=&quot;Version:1.0.0&quot;&gt;&#10;      &lt;option name=&quot;closed&quot; value=&quot;true&quot; /&gt;&#10;      &lt;created&gt;1716721663720&lt;/created&gt;&#10;      &lt;option name=&quot;number&quot; value=&quot;00007&quot; /&gt;&#10;      &lt;option name=&quot;presentableId&quot; value=&quot;LOCAL-00007&quot; /&gt;&#10;      &lt;option name=&quot;project&quot; value=&quot;LOCAL&quot; /&gt;&#10;      &lt;updated&gt;1716721663720&lt;/updated&gt;&#10;    &lt;/task&gt;&#10;    &lt;task id=&quot;LOCAL-00008&quot; summary=&quot;Version:1.0.0&quot;&gt;&#10;      &lt;option name=&quot;closed&quot; value=&quot;true&quot; /&gt;&#10;      &lt;created&gt;1716983228635&lt;/created&gt;&#10;      &lt;option name=&quot;number&quot; value=&quot;00008&quot; /&gt;&#10;      &lt;option name=&quot;presentableId&quot; value=&quot;LOCAL-00008&quot; /&gt;&#10;      &lt;option name=&quot;project&quot; value=&quot;LOCAL&quot; /&gt;&#10;      &lt;updated&gt;1716983228635&lt;/updated&gt;&#10;    &lt;/task&gt;&#10;    &lt;task id=&quot;LOCAL-00009&quot; summary=&quot;package model;&amp;#10;&amp;#10;import util.Saver;&amp;#10;import java.io.IOException;&amp;#10;import java.util.*;&amp;#10;&amp;#10;public class UserManager {&amp;#10;    private List&amp;lt;User&amp;gt; userList;&amp;#10;    private static final String savePath = &amp;quot;src/main/resources/general&amp;quot;;&amp;#10;&amp;#10;    public UserManager() {&amp;#10;        try {&amp;#10;            Saver.makeDir(savePath); // 创建存储用户信息的文件夹&amp;#10;        } catch (Exception e) {&amp;#10;            e.printStackTrace();&amp;#10;        }&amp;#10;        userList = new ArrayList&amp;lt;&amp;gt;();&amp;#10;    }&amp;#10;&amp;#10;    public User register(String name, String password) throws IOException {&amp;#10;        User user = null;&amp;#10;        if (hasUser(name)) { // 检查用户是否已存在&amp;#10;            throw new IllegalArgumentException(&amp;quot;This user has existed!&amp;quot;);&amp;#10;        } else if (!isPasswordValid(password)) { // 检查密码是否有效&amp;#10;            throw new IllegalArgumentException(&amp;quot;Invalid password! Your password should contain at least 8 characters.&amp;quot;);&amp;#10;        } else if (name.equals(&amp;quot;&amp;quot;) || password.equals(&amp;quot;&amp;quot;)) { // 检查用户名和密码是否为空&amp;#10;            throw new IllegalArgumentException(&amp;quot;Username or password cannot be empty!&amp;quot;);&amp;#10;        } else {&amp;#10;            user = new User(name, password, &amp;quot;src/main/resources/savedata/&amp;quot; + name);&amp;#10;            Saver.makeDir(user.getPath());&amp;#10;            userList.add(user);&amp;#10;            // 保存用户信息&amp;#10;            Saver.saveToJson(Saver.buildGson(this), savePath + &amp;quot;/userInfo.json&amp;quot;);&amp;#10;        }&amp;#10;        return user;&amp;#10;    }&amp;#10;    public User login(String name, String password) {&amp;#10;        if (userList.isEmpty()) {&amp;#10;            throw new IllegalArgumentException(&amp;quot;This user doesn't exist!&amp;quot;);&amp;#10;        } else {&amp;#10;            for (int i = 0; i &amp;lt; userList.size(); i++) {&amp;#10;                if (userList.get(i).getName().equals(name)) {&amp;#10;                    if (!userList.get(i).getPassword().equals(password)) {&amp;#10;                        throw new IllegalArgumentException(&amp;quot;Incorrect password!&amp;quot;);&amp;#10;                    } else {&amp;#10;                        return userList.get(i);&amp;#10;                    }&amp;#10;                }&amp;#10;            }&amp;#10;            throw new IllegalArgumentException(&amp;quot;This user doesn't exist!&amp;quot;);&amp;#10;        }&amp;#10;    }&amp;#10;    public void deleteUser(User user) throws IOException {&amp;#10;        userList.remove(user);&amp;#10;        Saver.saveToJson(Saver.buildGson(this), savePath);&amp;#10;    }&amp;#10;    public boolean hasUser(String name) {&amp;#10;        boolean hasUser = false;&amp;#10;        for (int i = 0; i &amp;lt; userList.size(); i++) {&amp;#10;            if (userList.get(i).getName().equals(name)) {&amp;#10;                hasUser = true;&amp;#10;                break;&amp;#10;            }&amp;#10;        }&amp;#10;        return hasUser;&amp;#10;    }&amp;#10;    public boolean isPasswordValid(String password) {&amp;#10;        boolean isPasswordValid = false;&amp;#10;        if (password.length() &amp;gt;= 8) {&amp;#10;            isPasswordValid = true;&amp;#10;        }&amp;#10;        return isPasswordValid;&amp;#10;    }&amp;#10;}&quot;&gt;&#10;      &lt;option name=&quot;closed&quot; value=&quot;true&quot; /&gt;&#10;      &lt;created&gt;1716983259273&lt;/created&gt;&#10;      &lt;option name=&quot;number&quot; value=&quot;00009&quot; /&gt;&#10;      &lt;option name=&quot;presentableId&quot; value=&quot;LOCAL-00009&quot; /&gt;&#10;      &lt;option name=&quot;project&quot; value=&quot;LOCAL&quot; /&gt;&#10;      &lt;updated&gt;1716983259273&lt;/updated&gt;&#10;    &lt;/task&gt;&#10;    &lt;option name=&quot;localTasksCounter&quot; value=&quot;10&quot; /&gt;&#10;    &lt;servers /&gt;&#10;  &lt;/component&gt;&#10;  &lt;component name=&quot;TypeScriptGeneratedFilesManager&quot;&gt;&#10;    &lt;option name=&quot;version&quot; value=&quot;3&quot; /&gt;&#10;  &lt;/component&gt;&#10;  &lt;component name=&quot;Vcs.Log.Tabs.Properties&quot;&gt;&#10;    &lt;option name=&quot;TAB_STATES&quot;&gt;&#10;      &lt;map&gt;&#10;        &lt;entry key=&quot;MAIN&quot;&gt;&#10;          &lt;value&gt;&#10;            &lt;State /&gt;&#10;          &lt;/value&gt;&#10;        &lt;/entry&gt;&#10;      &lt;/map&gt;&#10;    &lt;/option&gt;&#10;  &lt;/component&gt;&#10;  &lt;component name=&quot;VcsManagerConfiguration&quot;&gt;&#10;    &lt;MESSAGE value=&quot;Merge branch 'dev' into zaddle&quot; /&gt;&#10;    &lt;MESSAGE value=&quot;Add move sound effect and apply custom font&quot; /&gt;&#10;    &lt;MESSAGE value=&quot;Implement multiple player management and save function&quot; /&gt;&#10;    &lt;MESSAGE value=&quot;Modify GameUI&quot; /&gt;&#10;    &lt;MESSAGE value=&quot;Modify GameUI with sidebar&quot; /&gt;&#10;    &lt;MESSAGE value=&quot;Modify Game Runtime logic&quot; /&gt;&#10;    &lt;MESSAGE value=&quot;Apply auto save func&quot; /&gt;&#10;    &lt;MESSAGE value=&quot;Version:1.0.0&quot; /&gt;&#10;    &lt;MESSAGE value=&quot;package model;&amp;#10;&amp;#10;import util.Saver;&amp;#10;import java.io.IOException;&amp;#10;import java.util.*;&amp;#10;&amp;#10;public class UserManager {&amp;#10;    private List&amp;lt;User&amp;gt; userList;&amp;#10;    private static final String savePath = &amp;quot;src/main/resources/general&amp;quot;;&amp;#10;&amp;#10;    public UserManager() {&amp;#10;        try {&amp;#10;            Saver.makeDir(savePath); // 创建存储用户信息的文件夹&amp;#10;        } catch (Exception e) {&amp;#10;            e.printStackTrace();&amp;#10;        }&amp;#10;        userList = new ArrayList&amp;lt;&amp;gt;();&amp;#10;    }&amp;#10;&amp;#10;    public User register(String name, String password) throws IOException {&amp;#10;        User user = null;&amp;#10;        if (hasUser(name)) { // 检查用户是否已存在&amp;#10;            throw new IllegalArgumentException(&amp;quot;This user has existed!&amp;quot;);&amp;#10;        } else if (!isPasswordValid(password)) { // 检查密码是否有效&amp;#10;            throw new IllegalArgumentException(&amp;quot;Invalid password! Your password should contain at least 8 characters.&amp;quot;);&amp;#10;        } else if (name.equals(&amp;quot;&amp;quot;) || password.equals(&amp;quot;&amp;quot;)) { // 检查用户名和密码是否为空&amp;#10;            throw new IllegalArgumentException(&amp;quot;Username or password cannot be empty!&amp;quot;);&amp;#10;        } else {&amp;#10;            user = new User(name, password, &amp;quot;src/main/resources/savedata/&amp;quot; + name);&amp;#10;            Saver.makeDir(user.getPath());&amp;#10;            userList.add(user);&amp;#10;            // 保存用户信息&amp;#10;            Saver.saveToJson(Saver.buildGson(this), savePath + &amp;quot;/userInfo.json&amp;quot;);&amp;#10;        }&amp;#10;        return user;&amp;#10;    }&amp;#10;    public User login(String name, String password) {&amp;#10;        if (userList.isEmpty()) {&amp;#10;            throw new IllegalArgumentException(&amp;quot;This user doesn't exist!&amp;quot;);&amp;#10;        } else {&amp;#10;            for (int i = 0; i &amp;lt; userList.size(); i++) {&amp;#10;                if (userList.get(i).getName().equals(name)) {&amp;#10;                    if (!userList.get(i).getPassword().equals(password)) {&amp;#10;                        throw new IllegalArgumentException(&amp;quot;Incorrect password!&amp;quot;);&amp;#10;                    } else {&amp;#10;                        return userList.get(i);&amp;#10;                    }&amp;#10;                }&amp;#10;            }&amp;#10;            throw new IllegalArgumentException(&amp;quot;This user doesn't exist!&amp;quot;);&amp;#10;        }&amp;#10;    }&amp;#10;    public void deleteUser(User user) throws IOException {&amp;#10;        userList.remove(user);&amp;#10;        Saver.saveToJson(Saver.buildGson(this), savePath);&amp;#10;    }&amp;#10;    public boolean hasUser(String name) {&amp;#10;        boolean hasUser = false;&amp;#10;        for (int i = 0; i &amp;lt; userList.size(); i++) {&amp;#10;            if (userList.get(i).getName().equals(name)) {&amp;#10;                hasUser = true;&amp;#10;                break;&amp;#10;            }&amp;#10;        }&amp;#10;        return hasUser;&amp;#10;    }&amp;#10;    public boolean isPasswordValid(String password) {&amp;#10;        boolean isPasswordValid = false;&amp;#10;        if (password.length() &amp;gt;= 8) {&amp;#10;            isPasswordValid = true;&amp;#10;        }&amp;#10;        return isPasswordValid;&amp;#10;    }&amp;#10;}&quot; /&gt;&#10;    &lt;option name=&quot;LAST_COMMIT_MESSAGE&quot; value=&quot;package model;&amp;#10;&amp;#10;import util.Saver;&amp;#10;import java.io.IOException;&amp;#10;import java.util.*;&amp;#10;&amp;#10;public class UserManager {&amp;#10;    private List&amp;lt;User&amp;gt; userList;&amp;#10;    private static final String savePath = &amp;quot;src/main/resources/general&amp;quot;;&amp;#10;&amp;#10;    public UserManager() {&amp;#10;        try {&amp;#10;            Saver.makeDir(savePath); // 创建存储用户信息的文件夹&amp;#10;        } catch (Exception e) {&amp;#10;            e.printStackTrace();&amp;#10;        }&amp;#10;        userList = new ArrayList&amp;lt;&amp;gt;();&amp;#10;    }&amp;#10;&amp;#10;    public User register(String name, String password) throws IOException {&amp;#10;        User user = null;&amp;#10;        if (hasUser(name)) { // 检查用户是否已存在&amp;#10;            throw new IllegalArgumentException(&amp;quot;This user has existed!&amp;quot;);&amp;#10;        } else if (!isPasswordValid(password)) { // 检查密码是否有效&amp;#10;            throw new IllegalArgumentException(&amp;quot;Invalid password! Your password should contain at least 8 characters.&amp;quot;);&amp;#10;        } else if (name.equals(&amp;quot;&amp;quot;) || password.equals(&amp;quot;&amp;quot;)) { // 检查用户名和密码是否为空&amp;#10;            throw new IllegalArgumentException(&amp;quot;Username or password cannot be empty!&amp;quot;);&amp;#10;        } else {&amp;#10;            user = new User(name, password, &amp;quot;src/main/resources/savedata/&amp;quot; + name);&amp;#10;            Saver.makeDir(user.getPath());&amp;#10;            userList.add(user);&amp;#10;            // 保存用户信息&amp;#10;            Saver.saveToJson(Saver.buildGson(this), savePath + &amp;quot;/userInfo.json&amp;quot;);&amp;#10;        }&amp;#10;        return user;&amp;#10;    }&amp;#10;    public User login(String name, String password) {&amp;#10;        if (userList.isEmpty()) {&amp;#10;            throw new IllegalArgumentException(&amp;quot;This user doesn't exist!&amp;quot;);&amp;#10;        } else {&amp;#10;            for (int i = 0; i &amp;lt; userList.size(); i++) {&amp;#10;                if (userList.get(i).getName().equals(name)) {&amp;#10;                    if (!userList.get(i).getPassword().equals(password)) {&amp;#10;                        throw new IllegalArgumentException(&amp;quot;Incorrect password!&amp;quot;);&amp;#10;                    } else {&amp;#10;                        return userList.get(i);&amp;#10;                    }&amp;#10;                }&amp;#10;            }&amp;#10;            throw new IllegalArgumentException(&amp;quot;This user doesn't exist!&amp;quot;);&amp;#10;        }&amp;#10;    }&amp;#10;    public void deleteUser(User user) throws IOException {&amp;#10;        userList.remove(user);&amp;#10;        Saver.saveToJson(Saver.buildGson(this), savePath);&amp;#10;    }&amp;#10;    public boolean hasUser(String name) {&amp;#10;        boolean hasUser = false;&amp;#10;        for (int i = 0; i &amp;lt; userList.size(); i++) {&amp;#10;            if (userList.get(i).getName().equals(name)) {&amp;#10;                hasUser = true;&amp;#10;                break;&amp;#10;            }&amp;#10;        }&amp;#10;        return hasUser;&amp;#10;    }&amp;#10;    public boolean isPasswordValid(String password) {&amp;#10;        boolean isPasswordValid = false;&amp;#10;        if (password.length() &amp;gt;= 8) {&amp;#10;            isPasswordValid = true;&amp;#10;        }&amp;#10;        return isPasswordValid;&amp;#10;    }&amp;#10;}&quot; /&gt;&#10;  &lt;/component&gt;&#10;  &lt;component name=&quot;XDebuggerManager&quot;&gt;&#10;    &lt;breakpoint-manager&gt;&#10;      &lt;breakpoints&gt;&#10;        &lt;line-breakpoint enabled=&quot;true&quot; type=&quot;java-line&quot;&gt;&#10;          &lt;url&gt;file://D:/IdeaProjects/Gaming2048/src/main/java/util/Saver.java&lt;/url&gt;&#10;          &lt;line&gt;34&lt;/line&gt;&#10;          &lt;option name=&quot;timeStamp&quot; value=&quot;42&quot; /&gt;&#10;        &lt;/line-breakpoint&gt;&#10;        &lt;line-breakpoint enabled=&quot;true&quot; type=&quot;java-line&quot;&gt;&#10;          &lt;url&gt;file://D:/IdeaProjects/Gaming2048/src/main/java/controller/GameUI.java&lt;/url&gt;&#10;          &lt;line&gt;218&lt;/line&gt;&#10;          &lt;option name=&quot;timeStamp&quot; value=&quot;58&quot; /&gt;&#10;        &lt;/line-breakpoint&gt;&#10;        &lt;line-breakpoint enabled=&quot;true&quot; type=&quot;java-line&quot;&gt;&#10;          &lt;url&gt;file://D:/IdeaProjects/Gaming2048/src/main/java/controller/GameUI.java&lt;/url&gt;&#10;          &lt;line&gt;216&lt;/line&gt;&#10;          &lt;option name=&quot;timeStamp&quot; value=&quot;59&quot; /&gt;&#10;        &lt;/line-breakpoint&gt;&#10;        &lt;line-breakpoint enabled=&quot;true&quot; type=&quot;java-line&quot;&gt;&#10;          &lt;url&gt;file://D:/IdeaProjects/Gaming2048/src/main/java/controller/GameUI.java&lt;/url&gt;&#10;          &lt;line&gt;214&lt;/line&gt;&#10;          &lt;option name=&quot;timeStamp&quot; value=&quot;60&quot; /&gt;&#10;        &lt;/line-breakpoint&gt;&#10;        &lt;line-breakpoint enabled=&quot;true&quot; type=&quot;java-line&quot;&gt;&#10;          &lt;url&gt;file://D:/IdeaProjects/Gaming2048/src/main/java/controller/GameUI.java&lt;/url&gt;&#10;          &lt;line&gt;212&lt;/line&gt;&#10;          &lt;option name=&quot;timeStamp&quot; value=&quot;61&quot; /&gt;&#10;        &lt;/line-breakpoint&gt;&#10;        &lt;line-breakpoint enabled=&quot;true&quot; type=&quot;java-line&quot;&gt;&#10;          &lt;url&gt;file://D:/IdeaProjects/Gaming2048/src/main/java/controller/GameUI.java&lt;/url&gt;&#10;          &lt;line&gt;551&lt;/line&gt;&#10;          &lt;option name=&quot;timeStamp&quot; value=&quot;62&quot; /&gt;&#10;        &lt;/line-breakpoint&gt;&#10;        &lt;line-breakpoint enabled=&quot;true&quot; type=&quot;java-line&quot;&gt;&#10;          &lt;url&gt;file://D:/IdeaProjects/Gaming2048/src/main/java/controller/GameUI.java&lt;/url&gt;&#10;          &lt;line&gt;330&lt;/line&gt;&#10;          &lt;option name=&quot;timeStamp&quot; value=&quot;66&quot; /&gt;&#10;        &lt;/line-breakpoint&gt;&#10;        &lt;line-breakpoint enabled=&quot;true&quot; type=&quot;java-line&quot;&gt;&#10;          &lt;url&gt;file://D:/IdeaProjects/Gaming2048/src/main/java/controller/LoadingAnimation.java&lt;/url&gt;&#10;          &lt;line&gt;132&lt;/line&gt;&#10;          &lt;option name=&quot;timeStamp&quot; value=&quot;68&quot; /&gt;&#10;        &lt;/line-breakpoint&gt;&#10;        &lt;line-breakpoint enabled=&quot;true&quot; type=&quot;java-method&quot;&gt;&#10;          &lt;url&gt;file://D:/IdeaProjects/Gaming2048/src/main/java/controller/MainUI.java&lt;/url&gt;&#10;          &lt;line&gt;64&lt;/line&gt;&#10;          &lt;properties class=&quot;controller.MainUI&quot;&gt;&#10;            &lt;option name=&quot;EMULATED&quot; value=&quot;true&quot; /&gt;&#10;            &lt;option name=&quot;WATCH_EXIT&quot; value=&quot;false&quot; /&gt;&#10;          &lt;/properties&gt;&#10;          &lt;option name=&quot;timeStamp&quot; value=&quot;47&quot; /&gt;&#10;        &lt;/line-breakpoint&gt;&#10;      &lt;/breakpoints&gt;&#10;    &lt;/breakpoint-manager&gt;&#10;    &lt;watches-manager&gt;&#10;      &lt;configuration name=&quot;Application&quot;&gt;&#10;        &lt;watch expression=&quot;Saver.makeDir(savePath)&quot; language=&quot;JAVA&quot; /&gt;&#10;        &lt;watch expression=&quot;currentIndex&quot; language=&quot;JAVA&quot; /&gt;&#10;        &lt;watch expression=&quot;MainUI.downPanes&quot; language=&quot;JAVA&quot; custom=&quot;controller.MainUI&quot; /&gt;&#10;      &lt;/configuration&gt;&#10;    &lt;/watches-manager&gt;&#10;  &lt;/component&gt;&#10;&lt;/project&gt;">
      <option name="closed" value="true" />
      <created>1716983305328</created>
      <option name="number" value="00010" />
      <option name="presentableId" value="LOCAL-00010" />
      <option name="project" value="LOCAL" />
      <updated>1716983305328</updated>
    </task>
    <task id="LOCAL-00011" summary="package ai;&#10;&#10;import controller.GameUI;&#10;import util.*;&#10;&#10;/**&#10; * AlphaDuo&#10; * @version: 1.0.0&#10; * @description: AlphaDuo is a class that represents the AI of the game, &quot;duo&quot; means two, which means that the AI is designed for 2048 which uses &quot;2&quot; grids to make larger binary numbers.&#10; * @function: Used to play the game automatically or to provide hints to the player.&#10; * @Implementation: AlphaDuo uses the Minimax and Alpha-Beta algorithms to simulate the game and make decisions.&#10; */&#10;public class AlphaDuo {&#10;    protected static double evaluationScore = 0;&#10;    protected static final double monotonyWeight = 0.4; // 单调性权重&#10;    protected static final double smoothWeight = 1.0; // 平滑性权重&#10;    protected static final double emptyWeight = 0.7; // 总空格数权重&#10;    protected static final double islandWeight = 0.1; // 孤立空格数权重&#10;    protected static int directionNum = 0;&#10;&#10;    protected static double evaluate(Direction d) {&#10;        boolean isIncrease = false;&#10;        int numOfMonotonyTiles = 0;&#10;        int monotonyL = 0;&#10;        int monotonyR = 0;&#10;        int monotonyU = 0;&#10;        int monotonyD = 0;&#10;        for (int i=0; i &lt; GameUI.getGrid().getSize(); i++) {&#10;            for (int j=0; j &lt; GameUI.getGrid().getSize(); j += numOfMonotonyTiles) {&#10;                if ((GameUI.getGrid().getBoard()[i][j] &lt; GameUI.getGrid().getBoard()[i][j+1])) {&#10;                    isIncrease = true;&#10;                } else if ((GameUI.getGrid().getBoard()[i][j] &gt; GameUI.getGrid().getBoard()[i][j+1])) {&#10;                    isIncrease = false;&#10;                }&#10;                if (isIncrease) {&#10;                    for (int a=1; j+a &lt; GameUI.getGrid().getSize(); a++) {&#10;                        if (GameUI.getGrid().getBoard()[i][j+a] &lt; GameUI.getGrid().getBoard()[i][j+a+1]) {&#10;                            numOfMonotonyTiles += 1;&#10;                        } else {&#10;                            isIncrease = false;&#10;                            break;&#10;                        }&#10;                    }&#10;                } else if (!isIncrease) {&#10;                    for (int a=1; j+a &lt; GameUI.getGrid().getSize(); a++) {&#10;                        if (GameUI.getGrid().getBoard()[i][j+a] &gt; GameUI.getGrid().getBoard()[i][j+a+1]) {&#10;                            numOfMonotonyTiles += 1;&#10;                        } else {&#10;                            isIncrease = true;&#10;                            break;&#10;                        }&#10;                    }&#10;                }&#10;                for (int a=0; j+a &lt; GameUI.getGrid().getSize()-1; a++) {&#10;                }&#10;                for (int b=0; i+b &lt; GameUI.getGrid().getSize() - 1; b++) {&#10;                    if (GameUI.getGrid().getBoard()[i+b][j] &lt; GameUI.getGrid().getBoard()[i+b+1][j]) {&#10;                        monotonyD += 1;&#10;                    } else if (GameUI.getGrid().getBoard()[i+b][j] &gt; GameUI.getGrid().getBoard()[i+b+1][j]) {&#10;                        monotonyU += 1;&#10;                    }&#10;                }&#10;            }&#10;        }&#10;        evaluationScore += (monotonyL * monotonyWeight) + (monotonyR * monotonyWeight) + (monotonyU * monotonyWeight) + (monotonyD * monotonyWeight);&#10;&#10;        int emptyTile = 0;&#10;        for (int i=0; i &lt; GameUI.getGrid().getSize(); i++) {&#10;            for (int j=0; j &lt; GameUI.getGrid().getSize(); j++) {&#10;                if (GameUI.getGrid().getBoard()[i][j] == 0) {&#10;                    emptyTile += 1;&#10;                }&#10;            }&#10;        }&#10;        evaluationScore += emptyTile * emptyWeight;&#10;&#10;&#10;&#10;&#10;        return evaluationScore;&#10;    }&#10;    protected static int setDirection() {&#10;        Direction direction = Direction.UP;&#10;        if (evaluate(Direction.DOWN) &gt; evaluate(direction)) {&#10;            direction = Direction.DOWN;&#10;            directionNum = 1;&#10;        }&#10;        if (evaluate(Direction.LEFT) &gt; evaluate(direction)) {&#10;            direction = Direction.LEFT;&#10;            directionNum = 2;&#10;        }&#10;        if (evaluate(Direction.RIGHT) &gt; evaluate(direction)) {&#10;            directionNum = 3;&#10;        }&#10;        return directionNum;&#10;    }&#10;}">
      <option name="closed" value="true" />
      <created>1716985108246</created>
      <option name="number" value="00011" />
      <option name="presentableId" value="LOCAL-00011" />
      <option name="project" value="LOCAL" />
      <updated>1716985108246</updated>
    </task>
    <task id="LOCAL-00012" summary="package ai;&#10;&#10;import controller.GameUI;&#10;import model.Grid;&#10;import util.Direction;&#10;import java.util.Random;&#10;&#10;import static ai.AlphaDuo.setDirection;&#10;import static java.lang.Thread.sleep;&#10;&#10;public class AIThread implements Runnable {&#10;    protected Grid grid;&#10;    protected GameUI gameThread;&#10;    public boolean endFlag = false;&#10;&#10;    public AIThread(Grid grid, GameUI gameThread) {&#10;        this.grid = grid;&#10;        this.gameThread = gameThread;&#10;    }&#10;&#10;    protected Direction getDirection() {&#10;        if (setDirection() == 0) {&#10;            return Direction.UP;&#10;        } else if (setDirection() == 1) {&#10;            return Direction.DOWN;&#10;        } else if (setDirection() == 2) {&#10;            return Direction.LEFT;&#10;        } else if (setDirection() == 3) {&#10;            return Direction.RIGHT;&#10;        } else {&#10;            return null;&#10;        }&#10;    }&#10;    protected void move(Direction direction) {&#10;        gameThread.simulateMove(direction);&#10;    }&#10;    protected void updateGrid() {&#10;        grid = gameThread.getGrid();&#10;    }&#10;    protected void updateEndFlag() {&#10;        endFlag = !GameUI.isAuto || GameUI.isWin || GameUI.isLose;&#10;    }&#10;    @Override&#10;    public void run() {&#10;        Random random = new Random();&#10;        int randomNum = random.nextInt(4);&#10;        if (randomNum == 0) {&#10;            move(Direction.UP);&#10;        } else if (randomNum == 1) {&#10;            move(Direction.DOWN);&#10;        } else if (randomNum == 2) {&#10;            move(Direction.LEFT);&#10;        } else {&#10;            move(Direction.RIGHT);&#10;        }&#10;        while (!endFlag) {&#10;            try {&#10;                sleep(200);&#10;                updateGrid();&#10;                updateEndFlag();&#10;                move(getDirection());&#10;            } catch (InterruptedException e) {&#10;                throw new RuntimeException(e);&#10;            }&#10;        }&#10;    }&#10;}">
      <option name="closed" value="true" />
      <created>1716988945401</created>
      <option name="number" value="00012" />
      <option name="presentableId" value="LOCAL-00012" />
      <option name="project" value="LOCAL" />
      <updated>1716988945401</updated>
    </task>
    <task id="LOCAL-00013" summary="package ai;&#10;&#10;import controller.GameUI;&#10;import model.Grid;&#10;import util.Direction;&#10;import java.util.Random;&#10;&#10;import static ai.AlphaDuo.setDirection;&#10;import static java.lang.Thread.sleep;&#10;&#10;public class AIThread implements Runnable {&#10;    protected Grid grid;&#10;    protected GameUI gameThread;&#10;    public boolean endFlag = false;&#10;&#10;    public AIThread(Grid grid, GameUI gameThread) {&#10;        this.grid = grid;&#10;        this.gameThread = gameThread;&#10;    }&#10;&#10;    protected Direction getDirection() {&#10;        if (setDirection() == 0) {&#10;            return Direction.UP;&#10;        } else if (setDirection() == 1) {&#10;            return Direction.DOWN;&#10;        } else if (setDirection() == 2) {&#10;            return Direction.LEFT;&#10;        } else if (setDirection() == 3) {&#10;            return Direction.RIGHT;&#10;        } else {&#10;            return null;&#10;        }&#10;    }&#10;    protected void move(Direction direction) {&#10;        gameThread.simulateMove(direction);&#10;    }&#10;    protected void updateGrid() {&#10;        grid = gameThread.getGrid();&#10;    }&#10;    protected void updateEndFlag() {&#10;        endFlag = !GameUI.isAuto || GameUI.isWin || GameUI.isLose;&#10;    }&#10;    @Override&#10;    public void run() {&#10;        if (!endFlag) {&#10;            Random random = new Random();&#10;            int randomNum = random.nextInt(4);&#10;            if (randomNum == 0) {&#10;                move(Direction.UP);&#10;            } else if (randomNum == 1) {&#10;                move(Direction.DOWN);&#10;            } else if (randomNum == 2) {&#10;                move(Direction.LEFT);&#10;            } else {&#10;                move(Direction.RIGHT);&#10;            }&#10;        }&#10;        while (!endFlag) {&#10;            try {&#10;                sleep(200);&#10;                updateGrid();&#10;                updateEndFlag();&#10;                move(getDirection());&#10;            } catch (InterruptedException e) {&#10;                throw new RuntimeException(e);&#10;            }&#10;        }&#10;    }&#10;}">
      <option name="closed" value="true" />
      <created>1716990905746</created>
      <option name="number" value="00013" />
      <option name="presentableId" value="LOCAL-00013" />
      <option name="project" value="LOCAL" />
      <updated>1716990905746</updated>
    </task>
    <task id="LOCAL-00014" summary="package ai;&#10;&#10;import controller.GameUI;&#10;import model.Grid;&#10;import util.Direction;&#10;import java.util.Random;&#10;&#10;import static ai.AlphaDuo.*;&#10;import static java.lang.Thread.sleep;&#10;&#10;public class AIThread implements Runnable {&#10;    protected Grid grid;&#10;    protected GameUI gameThread;&#10;    public boolean endFlag = false;&#10;&#10;    public AIThread(Grid grid, GameUI gameThread) {&#10;        this.grid = grid;&#10;        this.gameThread = gameThread;&#10;    }&#10;&#10;    protected Direction getDirection() {&#10;        if (setDirection() == 0) {&#10;            return Direction.UP;&#10;        } else if (setDirection() == 1) {&#10;            return Direction.DOWN;&#10;        } else if (setDirection() == 2) {&#10;            return Direction.LEFT;&#10;        } else if (setDirection() == 3) {&#10;            return Direction.RIGHT;&#10;        } else {&#10;            return null;&#10;        }&#10;    }&#10;    protected void move(Direction direction) {&#10;        gameThread.simulateMove(direction);&#10;    }&#10;    protected void updateGrid() {&#10;        grid = gameThread.getGrid();&#10;    }&#10;    protected void updateEndFlag() {&#10;        endFlag = !GameUI.isAuto || GameUI.isWin || GameUI.isLose;&#10;    }&#10;    @Override&#10;    public void run() {&#10;        if (!endFlag) {&#10;            Random random = new Random();&#10;            int randomNum = random.nextInt(4);&#10;            if (randomNum == 0) {&#10;                move(Direction.UP);&#10;            } else if (randomNum == 1) {&#10;                move(Direction.DOWN);&#10;            } else if (randomNum == 2) {&#10;                move(Direction.LEFT);&#10;            } else {&#10;                move(Direction.RIGHT);&#10;            }&#10;        }&#10;        while (!endFlag) {&#10;            try {&#10;                sleep(200);&#10;                updateGrid();&#10;                updateEndFlag();&#10;                move(getDirection());&#10;                upEvaluationScore = 0;&#10;                downEvaluationScore = 0;&#10;                leftEvaluationScore = 0;&#10;                rightEvaluationScore = 0;&#10;            } catch (InterruptedException e) {&#10;                throw new RuntimeException(e);&#10;            }&#10;        }&#10;    }&#10;}">
      <option name="closed" value="true" />
      <created>1716991858020</created>
      <option name="number" value="00014" />
      <option name="presentableId" value="LOCAL-00014" />
      <option name="project" value="LOCAL" />
      <updated>1716991858020</updated>
    </task>
    <task id="LOCAL-00015" summary="package ai;&#10;&#10;import controller.GameUI;&#10;import model.Grid;&#10;import util.Direction;&#10;import java.util.Random;&#10;&#10;import static ai.AlphaDuo.*;&#10;import static java.lang.Thread.sleep;&#10;&#10;public class AIThread implements Runnable {&#10;    protected Grid grid;&#10;    protected GameUI gameThread;&#10;    public boolean endFlag = false;&#10;&#10;    public AIThread(Grid grid, GameUI gameThread) {&#10;        this.grid = grid;&#10;        this.gameThread = gameThread;&#10;    }&#10;&#10;    protected Direction getDirection() {&#10;        if (setDirection() == 0) {&#10;            return Direction.UP;&#10;        } else if (setDirection() == 1) {&#10;            return Direction.DOWN;&#10;        } else if (setDirection() == 2) {&#10;            return Direction.LEFT;&#10;        } else if (setDirection() == 3) {&#10;            return Direction.RIGHT;&#10;        } else {&#10;            return null;&#10;        }&#10;    }&#10;    protected void move(Direction direction) {&#10;        gameThread.simulateMove(direction);&#10;    }&#10;    protected void updateGrid() {&#10;        grid = gameThread.getGrid();&#10;    }&#10;    protected void updateEndFlag() {&#10;        endFlag = !GameUI.isAuto || GameUI.isWin || GameUI.isLose;&#10;    }&#10;    @Override&#10;    public void run() {&#10;        if (!endFlag) {&#10;            Random random = new Random();&#10;            int randomNum = random.nextInt(4);&#10;            if (randomNum == 0) {&#10;                move(Direction.UP);&#10;            } else if (randomNum == 1) {&#10;                move(Direction.DOWN);&#10;            } else if (randomNum == 2) {&#10;                move(Direction.LEFT);&#10;            } else {&#10;                move(Direction.RIGHT);&#10;            }&#10;        }&#10;        while (!endFlag) {&#10;            try {&#10;                sleep(1000);&#10;                updateGrid();&#10;                updateEndFlag();&#10;                evaluate();&#10;                move(getDirection());&#10;                upEvaluationScore = 0;&#10;                downEvaluationScore = 0;&#10;                leftEvaluationScore = 0;&#10;                rightEvaluationScore = 0;&#10;            } catch (InterruptedException e) {&#10;                throw new RuntimeException(e);&#10;            }&#10;        }&#10;    }&#10;}">
      <option name="closed" value="true" />
      <created>1716995533105</created>
      <option name="number" value="00015" />
      <option name="presentableId" value="LOCAL-00015" />
      <option name="project" value="LOCAL" />
      <updated>1716995533105</updated>
    </task>
    <task id="LOCAL-00016" summary="Version 1.0.4(Add save data direction hyperlink)">
      <option name="closed" value="true" />
      <created>1716987686466</created>
      <option name="number" value="00016" />
      <option name="presentableId" value="LOCAL-00016" />
      <option name="project" value="LOCAL" />
      <updated>1716987686466</updated>
    </task>
    <option name="localTasksCounter" value="17" />
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="Merge branch 'dev' into zaddle" />
    <MESSAGE value="Add move sound effect and apply custom font" />
    <MESSAGE value="Implement multiple player management and save function" />
    <MESSAGE value="Modify GameUI" />
    <MESSAGE value="Modify GameUI with sidebar" />
    <MESSAGE value="Modify Game Runtime logic" />
    <MESSAGE value="Apply auto save func" />
    <MESSAGE value="Version:1.0.0" />
    <MESSAGE value="Version:1.0.1" />
    <MESSAGE value="Update README" />
    <MESSAGE value="Implement option select interface" />
    <MESSAGE value="Implement music player" />
    <MESSAGE value="Add music player checker" />
    <MESSAGE value="Implement custom logger" />
    <MESSAGE value="Version 1.0.2" />
    <MESSAGE value="Version 1.0.3(Implement scoring effect)" />
    <MESSAGE value="Version 1.0.4(Add save data direction hyperlink)" />
    <option name="LAST_COMMIT_MESSAGE" value="Version 1.0.4(Add save data direction hyperlink)" />
  </component>
  <component name="XDebuggerManager">
    <breakpoint-manager>
      <breakpoints>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/util/Saver.java</url>
          <line>34</line>
          <option name="timeStamp" value="42" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/controller/GameUI.java</url>
          <line>218</line>
          <option name="timeStamp" value="58" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/controller/GameUI.java</url>
          <line>214</line>
          <option name="timeStamp" value="60" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/controller/GameUI.java</url>
          <line>551</line>
          <option name="timeStamp" value="62" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/ai/AIThread.java</url>
          <line>71</line>
          <option name="timeStamp" value="83" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-method">
          <url>file://$PROJECT_DIR$/src/main/java/controller/MainUI.java</url>
<<<<<<< HEAD
          <line>459</line>
          <option name="timeStamp" value="70" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/controller/GameUI.java</url>
          <line>169</line>
          <option name="timeStamp" value="74" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/util/logger/Logger.java</url>
          <line>59</line>
          <option name="timeStamp" value="77" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/controller/GameUI.java</url>
          <line>640</line>
          <option name="timeStamp" value="79" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-method">
          <url>file://$PROJECT_DIR$/src/main/java/controller/PublicResource.java</url>
          <line>70</line>
          <properties class="controller.PublicResource" method="loadSoundResource">
=======
          <line>64</line>
          <properties class="controller.MainUI">
>>>>>>> CJKProject_202405
            <option name="EMULATED" value="true" />
            <option name="WATCH_EXIT" value="false" />
          </properties>
          <option name="timeStamp" value="47" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-method">
          <url>file://$PROJECT_DIR$/src/main/java/ai/AlphaDuo.java</url>
          <line>210</line>
          <properties class="ai.AlphaDuo" method="setDirection">
            <option name="EMULATED" value="true" />
            <option name="WATCH_EXIT" value="false" />
          </properties>
          <option name="timeStamp" value="81" />
        </line-breakpoint>
      </breakpoints>
    </breakpoint-manager>
    <watches-manager>
      <configuration name="Application">
        <watch expression="Saver.makeDir(savePath)" language="JAVA" />
        <watch expression="currentIndex" language="JAVA" />
        <watch expression="MainUI.downPanes" language="JAVA" custom="controller.MainUI" />
        <watch expression="evaluateDirection(direction)" language="JAVA" />
        <watch expression="getDirection()" language="JAVA" />
      </configuration>
    </watches-manager>
  </component>
</project>